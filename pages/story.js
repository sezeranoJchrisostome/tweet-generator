import "@/styles/story.module.css";
import Head from "next/head";
import { Inter } from "next/font/google";
import { useState } from "react";
import TextInput from "@/components/TextInput";
import SubmitButton from "@/components/SubmitButton";
import ResponseDisplay from "@/components/ResponseDisplay";
import useApi from "@/hooks/useApi";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [inputValue, setInputValue] = useState("");
  const [topic, setTopic] = useState("poam");
  const [submitValue, setSubmitValue] = useState("");
  const [userMessages, setUserMessages] = useState([]);
  const [assistantMessages, setAssistantMessages] = useState([]);
  const { data, error, loading } = useApi(
    "/api/openai",
    "POST",
    { topic, description: submitValue },
    userMessages,
    assistantMessages
  );

  const handleSubmit = (event) => {
    event.preventDefault();
    setSubmitValue(inputValue);
    setUserMessages([...userMessages, inputValue]);

    if (data?.result) {
      setAssistantMessages([...assistantMessages, data.result]);
    }
  };

  const handleInputChange = (event) => {
    setInputValue(event.target.value);
  };

  return (
    <>
      <Head>
        <title>NextJS OpenAI Boilerplate</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        <h1 className={inter.className}>tweets generator</h1>
        <div className="">

        </div>
        <form>
          <ResponseDisplay data={data} error={error} loading={loading} />
          <label>Topic</label>
          <select
            className="text-input"
            onChange={(e) => setTopic(e.target.value)}
          >
            <option value="poem">Poem</option>
            <option value="short story">short story</option>
          </select>
          <TextInput
            value={inputValue}
            onChange={handleInputChange}
            suggention={topic}
          />
          <SubmitButton onClick={handleSubmit} disabled={loading} />
        </form>
      </main>
    </>
  );
}
